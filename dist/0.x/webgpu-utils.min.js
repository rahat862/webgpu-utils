!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).webgpuUtils={})}(this,(function(t){"use strict";class e{constructor(t,e,r){this._type=t,this._lexeme=e,this._line=r}toString(){return this._lexeme}}e.EOF={name:"EOF",type:"token",rule:-1};let r={};class s{constructor(t){this._source=t||"",this._tokens=[],this._start=0,this._current=0,this._line=1}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new e(e.EOF,"",this._line)),this._tokens}scanToken(){let t=this._advance();if("\n"==t)return this._line++,!0;if(this._isWhitespace(t))return!0;if("/"==t){if("/"==this._peekAhead()){for(;"\n"!=t;){if(this._isAtEnd())return!0;t=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let e=1;for(;e>0;){if(this._isAtEnd())return!0;if(t=this._advance(),"\n"==t)this._line++;else if("*"==t){if("/"==this._peekAhead()&&(this._advance(),e--,0==e))return!0}else"/"==t&&"*"==this._peekAhead()&&(this._advance(),e++)}return!0}}let r=null;for(;;){let s=this._findToken(t);if(">"==t&&">"==this._peekAhead()){let t=!1,r=this._tokens.length-1;for(let s=0;s<4&&r>=0;++s,--r)if(this._tokens[r]._type==e.less_than){r>0&&-1!=e.template_types.indexOf(this._tokens[r-1]._type)&&(t=!0);break}if(t)return this._addToken(s),!0}if(!s){let e=t,i=0;const n=2;for(let t=0;t<n;++t)if(e+=this._peekAhead(t),s=this._findToken(e),s){i=t;break}if(!s)return!!r&&(this._current--,this._addToken(r),!0);t=e,this._current+=i+1}if(r=s,this._isAtEnd())break;t+=this._advance()}return null!==r&&(this._addToken(r),!0)}_findToken(t){for(const e in r){const s=r[e];if(this._match(t,s.rule))return s}for(const r in e.Tokens){const s=e.Tokens[r];if(this._match(t,s.rule))return s}return null}_match(t,e){if("string"==typeof e){if(e==t)return!0}else{const r=e.exec(t);if(r&&0==r.index&&r[0]==t)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(t){return" "==t||"\t"==t||"\r"==t}_advance(t){let e=this._source[this._current];return t=t||0,t++,this._current+=t,e}_peekAhead(t){return t=t||0,this._current+t>=this._source.length?"\0":this._source[this._current+t]}_addToken(t){const r=this._source.substring(this._start,this._current);this._tokens.push(new e(t,r,this._line))}}e.WgslTokens={decimal_float_literal:/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)/,hex_float_literal:/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/,int_literal:/-?0x[0-9a-fA-F]+|0|-?[1-9][0-9]*/,uint_literal:/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/,ident:/[a-zA-Z][0-9a-zA-Z_]*/,and:"&",and_and:"&&",arrow:"->",attr:"@",attr_left:"[[",attr_right:"]]",forward_slash:"/",bang:"!",bracket_left:"[",bracket_right:"]",brace_left:"{",brace_right:"}",colon:":",comma:",",equal:"=",equal_equal:"==",not_equal:"!=",greater_than:">",greater_than_equal:">=",shift_right:">>",less_than:"<",less_than_equal:"<=",shift_left:"<<",modulo:"%",minus:"-",minus_minus:"--",period:".",plus:"+",plus_plus:"++",or:"|",or_or:"||",paren_left:"(",paren_right:")",semicolon:";",star:"*",tilde:"~",underscore:"_",xor:"^",plus_equal:"+=",minus_equal:"-=",times_equal:"*=",division_equal:"/=",modulo_equal:"%=",and_equal:"&=",or_equal:"|=",xor_equal:"^=",shift_right_equal:">>=",shift_left_equal:"<<="},e.WgslKeywords=["array","atomic","bool","f32","i32","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","ptr","sampler","sampler_comparison","struct","texture_1d","texture_2d","texture_2d_array","texture_3d","texture_cube","texture_cube_array","texture_multisampled_2d","texture_storage_1d","texture_storage_2d","texture_storage_2d_array","texture_storage_3d","texture_depth_2d","texture_depth_2d_array","texture_depth_cube","texture_depth_cube_array","texture_depth_multisampled_2d","u32","vec2","vec3","vec4","bitcast","block","break","case","continue","continuing","default","discard","else","elseif","enable","fallthrough","false","fn","for","function","if","let","const","loop","while","private","read","read_write","return","storage","switch","true","type","uniform","var","workgroup","write","r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8unorm_srgb","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","bgra8unorm_srgb","rgb10a2unorm","rg11b10float","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","static_assert"],e.WgslReserved=["asm","bf16","do","enum","f16","f64","handle","i8","i16","i64","mat","premerge","regardless","typedef","u8","u16","u64","unless","using","vec","void"],function(){e.Tokens={};for(let t in e.WgslTokens)e.Tokens[t]={name:t,type:"token",rule:e.WgslTokens[t],toString:function(){return t}},e[t]=e.Tokens[t];for(let t=0,s=e.WgslKeywords.length;t<s;++t)r[e.WgslKeywords[t]]={name:e.WgslKeywords[t],type:"keyword",rule:e.WgslKeywords[t],toString:function(){return e.WgslKeywords[t]}};for(let t=0,s=e.WgslReserved.length;t<s;++t)r[e.WgslReserved[t]]={name:e.WgslReserved[t],type:"reserved",rule:e.WgslReserved[t],toString:function(){return e.WgslReserved[t]}};r.int32=r.i32,r.uint32=r.u32,r.float32=r.f32,r.pointer=r.ptr,e.storage_class=[r.function,r.private,r.workgroup,r.uniform,r.storage],e.access_mode=[r.read,r.write,r.read_write],e.sampler_type=[r.sampler,r.sampler_comparison],e.sampled_texture_type=[r.texture_1d,r.texture_2d,r.texture_2d_array,r.texture_3d,r.texture_cube,r.texture_cube_array],e.multisampled_texture_type=[r.texture_multisampled_2d],e.storage_texture_type=[r.texture_storage_1d,r.texture_storage_2d,r.texture_storage_2d_array,r.texture_storage_3d],e.depth_texture_type=[r.texture_depth_2d,r.texture_depth_2d_array,r.texture_depth_cube,r.texture_depth_cube_array,r.texture_depth_multisampled_2d],e.any_texture_type=[...e.sampled_texture_type,...e.multisampled_texture_type,...e.storage_texture_type,...e.depth_texture_type],e.texel_format=[r.r8unorm,r.r8snorm,r.r8uint,r.r8sint,r.r16uint,r.r16sint,r.r16float,r.rg8unorm,r.rg8snorm,r.rg8uint,r.rg8sint,r.r32uint,r.r32sint,r.r32float,r.rg16uint,r.rg16sint,r.rg16float,r.rgba8unorm,r.rgba8unorm_srgb,r.rgba8snorm,r.rgba8uint,r.rgba8sint,r.bgra8unorm,r.bgra8unorm_srgb,r.rgb10a2unorm,r.rg11b10float,r.rg32uint,r.rg32sint,r.rg32float,r.rgba16uint,r.rgba16sint,r.rgba16float,r.rgba32uint,r.rgba32sint,r.rgba32float],e.const_literal=[e.int_literal,e.uint_literal,e.decimal_float_literal,e.hex_float_literal,r.true,r.false],e.literal_or_ident=[e.ident,e.int_literal,e.uint_literal,e.decimal_float_literal,e.hex_float_literal],e.element_count_expression=[e.int_literal,e.uint_literal,e.ident],e.template_types=[r.vec2,r.vec3,r.vec4,r.mat2x2,r.mat2x3,r.mat2x4,r.mat3x2,r.mat3x3,r.mat3x4,r.mat4x2,r.mat4x3,r.mat4x4,r.atomic,r.bitcast,...e.any_texture_type],e.attribute_name=[e.ident,r.block],e.assignment_operators=[e.equal,e.plus_equal,e.minus_equal,e.times_equal,e.division_equal,e.modulo_equal,e.and_equal,e.or_equal,e.xor_equal,e.shift_right_equal,e.shift_left_equal],e.increment_operators=[e.plus_plus,e.minus_minus]}();class i{constructor(t,e){if(this._type=t,e)for(let t in e)this[t]=e[t]}}class n{constructor(){this._tokens=[],this._current=0}parse(t){this._initialize(t);let e=[];for(;!this._isAtEnd();){const t=this._global_decl_or_directive();if(!t)break;e.push(t)}return e}_initialize(t){if(t)if("string"==typeof t){const e=new s(t);this._tokens=e.scanTokens()}else this._tokens=t;else this._tokens=[];this._current=0}_error(t,e){return console.error(t,e),{token:t,message:e,toString:function(){return`${e}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek()._type==e.EOF}_match(t){if(void 0===t.length)return!!this._check(t)&&(this._advance(),!0);for(let e=0,r=t.length;e<r;++e){const r=t[e];if(this._check(r))return this._advance(),!0}return!1}_consume(t,e){if(this._check(t))return this._advance();throw this._error(this._peek(),e)}_check(t){if(this._isAtEnd())return!1;if(void 0!==t.length){let e=this._peek()._type;return-1!=t.indexOf(e)}return this._peek()._type==t}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(e.semicolon)&&!this._isAtEnd(););if(this._match(r.type)){const t=this._type_alias();return this._consume(e.semicolon,"Expected ';'"),t}if(this._match(r.enable)){const t=this._enable_directive();return this._consume(e.semicolon,"Expected ';'"),t}const t=this._attribute();if(this._check(r.var)){const r=this._global_variable_decl();return r.attributes=t,this._consume(e.semicolon,"Expected ';'."),r}if(this._check(r.let)){const r=this._global_constant_decl();return r.attributes=t,this._consume(e.semicolon,"Expected ';'."),r}if(this._check(r.struct)){const e=this._struct_decl();return e.attributes=t,e}if(this._check(r.fn)){const e=this._function_decl();return e.attributes=t,e}return null}_function_decl(){if(!this._match(r.fn))return null;const t=this._consume(e.ident,"Expected function name.").toString();this._consume(e.paren_left,"Expected '(' for function arguments.");const s=[];if(!this._check(e.paren_right))do{if(this._check(e.paren_right))break;const t=this._attribute(),r=this._consume(e.ident,"Expected argument name.").toString();this._consume(e.colon,"Expected ':' for argument type.");const n=this._attribute(),a=this._type_decl();a.attributes=n,s.push(new i("arg",{name:r,attributes:t,type:a}))}while(this._match(e.comma));this._consume(e.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(e.arrow)){const t=this._attribute();n=this._type_decl(),n.attributes=t}const a=this._compound_statement();return new i("function",{name:t,args:s,return:n,body:a})}_compound_statement(){const t=[];for(this._consume(e.brace_left,"Expected '{' for block.");!this._check(e.brace_right);){const e=this._statement();e&&t.push(e)}return this._consume(e.brace_right,"Expected '}' for block."),t}_statement(){for(;this._match(e.semicolon)&&!this._isAtEnd(););if(this._check(r.if))return this._if_statement();if(this._check(r.switch))return this._switch_statement();if(this._check(r.loop))return this._loop_statement();if(this._check(r.for))return this._for_statement();if(this._check(r.while))return this._while_statement();if(this._check(r.static_assert))return this._static_assert_statement();if(this._check(e.brace_left))return this._compound_statement();let t=null;return t=this._check(r.return)?this._return_statement():this._check([r.var,r.let,r.const])?this._variable_statement():this._match(r.discard)?new i("discard"):this._match(r.break)?new i("break"):this._match(r.continue)?new i("continue"):this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=t&&this._consume(e.semicolon,"Expected ';' after statement."),t}_static_assert_statement(){if(!this._match(r.static_assert))return null;let t=this._optional_paren_expression();return new i("static_assert",{expression:t})}_while_statement(){if(!this._match(r.while))return null;let t=this._optional_paren_expression();const e=this._compound_statement();return new i("while",{condition:t,block:e})}_for_statement(){if(!this._match(r.for))return null;this._consume(e.paren_left,"Expected '('.");const t=this._check(e.semicolon)?null:this._for_init();this._consume(e.semicolon,"Expected ';'.");const s=this._check(e.semicolon)?null:this._short_circuit_or_expression();this._consume(e.semicolon,"Expected ';'.");const n=this._check(e.paren_right)?null:this._for_increment();this._consume(e.paren_right,"Expected ')'.");const a=this._compound_statement();return new i("for",{init:t,condition:s,increment:n,body:a})}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(r.var)){const t=this._variable_decl();let r=null;return this._match(e.equal)&&(r=this._short_circuit_or_expression()),new i("var",{var:t,value:r})}if(this._match(r.let)){const t=this._consume(e.ident,"Expected name for let.").toString();let r=null;if(this._match(e.colon)){const t=this._attribute();r=this._type_decl(),r.attributes=t}this._consume(e.equal,"Expected '=' for let.");const s=this._short_circuit_or_expression();return new i("let",{name:t,type:r,value:s})}if(this._match(r.const)){const t=this._consume(e.ident,"Expected name for const.").toString();let r=null;if(this._match(e.colon)){const t=this._attribute();r=this._type_decl(),r.attributes=t}this._consume(e.equal,"Expected '=' for const.");const s=this._short_circuit_or_expression();return new i("const",{name:t,type:r,value:s})}return null}_increment_decrement_statement(){const t=this._current,r=this._unary_expression();if(null==r)return null;if(!this._check(e.increment_operators))return this._current=t,null;const s=this._consume(e.increment_operators,"Expected increment operator");return new i("increment",{type:s,var:r})}_assignment_statement(){let t=null;if(this._check(e.brace_right))return null;let r=this._match(e.underscore);if(r||(t=this._unary_expression()),!r&&null==t)return null;const s=this._consume(e.assignment_operators,"Expected assignment operator."),n=this._short_circuit_or_expression();return new i("assign",{type:s,var:t,value:n})}_func_call_statement(){if(!this._check(e.ident))return null;const t=this._current,r=this._consume(e.ident,"Expected function name."),s=this._argument_expression_list();return null===s?(this._current=t,null):new i("call",{name:r,args:s})}_loop_statement(){if(!this._match(r.loop))return null;this._consume(e.brace_left,"Expected '{' for loop.");const t=[];let s=this._statement();for(;null!==s;)t.push(s),s=this._statement();let n=null;return this._match(r.continuing)&&(n=this._compound_statement()),this._consume(e.brace_right,"Expected '}' for loop."),new i("loop",{statements:t,continuing:n})}_switch_statement(){if(!this._match(r.switch))return null;const t=this._optional_paren_expression();this._consume(e.brace_left);const s=this._switch_body();if(null==s||0==s.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(e.brace_right),new i("switch",{condition:t,body:s})}_switch_body(){const t=[];if(this._match(r.case)){this._consume(r.case);const s=this._case_selectors();this._consume(e.colon,"Exected ':' for switch case."),this._consume(e.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(e.brace_right,"Exected '}' for switch case."),t.push(new i("case",{selector:s,body:n}))}if(this._match(r.default)){this._consume(e.colon,"Exected ':' for switch default."),this._consume(e.brace_left,"Exected '{' for switch default.");const r=this._case_body();this._consume(e.brace_right,"Exected '}' for switch default."),t.push(new i("default",{body:r}))}if(this._check([r.default,r.case])){const e=this._switch_body();t.push(e[0])}return t}_case_selectors(){const t=[this._consume(e.const_literal,"Expected constant literal").toString()];for(;this._match(e.comma);)t.push(this._consume(e.const_literal,"Expected constant literal").toString());return t}_case_body(){if(this._match(r.fallthrough))return this._consume(e.semicolon),[];const t=this._statement();if(null==t)return[];const s=this._case_body();return 0==s.length?[t]:[t,s[0]]}_if_statement(){if(!this._match(r.if))return null;const t=this._optional_paren_expression(),e=this._compound_statement();let s=null;this._match(r.elseif)&&(s=this._elseif_statement());let n=null;return this._match(r.else)&&(n=this._compound_statement()),new i("if",{condition:t,block:e,elseif:s,else:n})}_elseif_statement(){const t=[],e=this._optional_paren_expression(),s=this._compound_statement();return t.push(new i("elseif",{condition:e,block:s})),this._match(r.elseif)&&t.push(this._elseif_statement()[0]),t}_return_statement(){if(!this._match(r.return))return null;const t=this._short_circuit_or_expression();return new i("return",{value:t})}_short_circuit_or_expression(){let t=this._short_circuit_and_expr();for(;this._match(e.or_or);)t=new i("compareOp",{operator:this._previous().toString(),left:t,right:this._short_circuit_and_expr()});return t}_short_circuit_and_expr(){let t=this._inclusive_or_expression();for(;this._match(e.and_and);)t=new i("compareOp",{operator:this._previous().toString(),left:t,right:this._inclusive_or_expression()});return t}_inclusive_or_expression(){let t=this._exclusive_or_expression();for(;this._match(e.or);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._exclusive_or_expression()});return t}_exclusive_or_expression(){let t=this._and_expression();for(;this._match(e.xor);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._and_expression()});return t}_and_expression(){let t=this._equality_expression();for(;this._match(e.and);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._equality_expression()});return t}_equality_expression(){const t=this._relational_expression();return this._match([e.equal_equal,e.not_equal])?new i("compareOp",{operator:this._previous().toString(),left:t,right:this._relational_expression()}):t}_relational_expression(){let t=this._shift_expression();for(;this._match([e.less_than,e.greater_than,e.less_than_equal,e.greater_than_equal]);)t=new i("compareOp",{operator:this._previous().toString(),left:t,right:this._shift_expression()});return t}_shift_expression(){let t=this._additive_expression();for(;this._match([e.shift_left,e.shift_right]);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._additive_expression()});return t}_additive_expression(){let t=this._multiplicative_expression();for(;this._match([e.plus,e.minus]);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._multiplicative_expression()});return t}_multiplicative_expression(){let t=this._unary_expression();for(;this._match([e.star,e.forward_slash,e.modulo]);)t=new i("binaryOp",{operator:this._previous().toString(),left:t,right:this._unary_expression()});return t}_unary_expression(){return this._match([e.minus,e.bang,e.tilde,e.star,e.and])?new i("unaryOp",{operator:this._previous().toString(),right:this._unary_expression()}):this._singular_expression()}_singular_expression(){const t=this._primary_expression(),e=this._postfix_expression();return e&&(t.postfix=e),t}_postfix_expression(){if(this._match(e.bracket_left)){const t=this._short_circuit_or_expression();this._consume(e.bracket_right,"Expected ']'.");const r=this._postfix_expression();return r&&(t.postfix=r),t}if(this._match(e.period)){const t=this._consume(e.ident,"Expected member name."),r=this._postfix_expression();return r&&(t.postfix=r),t}return null}_primary_expression(){if(this._match(e.ident)){const t=this._previous().toString();if(this._check(e.paren_left)){const e=this._argument_expression_list();return new i("call_expr",{name:t,args:e})}return new i("variable_expr",{name:t})}if(this._match(e.const_literal))return new i("literal_expr",{value:this._previous().toString()});if(this._check(e.paren_left))return this._paren_expression();if(this._match(r.bitcast)){this._consume(e.less_than,"Expected '<'.");const t=this._type_decl();this._consume(e.greater_than,"Expected '>'.");const r=this._paren_expression();return new i("bitcast_expr",{type:t,value:r})}const t=this._type_decl(),s=this._argument_expression_list();return new i("typecast_expr",{type:t,args:s})}_argument_expression_list(){if(!this._match(e.paren_left))return null;const t=[];do{if(this._check(e.paren_right))break;const r=this._short_circuit_or_expression();t.push(r)}while(this._match(e.comma));return this._consume(e.paren_right,"Expected ')' for agument list"),t}_optional_paren_expression(){this._match(e.paren_left);const t=this._short_circuit_or_expression();return this._match(e.paren_right),new i("grouping_expr",{contents:t})}_paren_expression(){this._consume(e.paren_left,"Expected '('.");const t=this._short_circuit_or_expression();return this._consume(e.paren_right,"Expected ')'."),new i("grouping_expr",{contents:t})}_struct_decl(){if(!this._match(r.struct))return null;const t=this._consume(e.ident,"Expected name for struct.").toString();this._consume(e.brace_left,"Expected '{' for struct body.");const s=[];for(;!this._check(e.brace_right);){const t=this._attribute(),r=this._consume(e.ident,"Expected variable name.").toString();this._consume(e.colon,"Expected ':' for struct member type.");const n=this._attribute(),a=this._type_decl();a.attributes=n,this._check(e.brace_right)?this._match(e.comma):this._consume(e.comma,"Expected ',' for struct member."),s.push(new i("member",{name:r,attributes:t,type:a}))}return this._consume(e.brace_right,"Expected '}' after struct body."),new i("struct",{name:t,members:s})}_global_variable_decl(){const t=this._variable_decl();return this._match(e.equal)&&(t.value=this._const_expression()),t}_global_constant_decl(){if(!this._match(r.let))return null;const t=this._consume(e.ident,"Expected variable name");let s=null;if(this._match(e.colon)){const t=this._attribute();s=this._type_decl(),s.attributes=t}let n=null;return this._match(e.equal)&&(n=this._const_expression()),new i("let",{name:t.toString(),type:s,value:n})}_const_expression(){if(this._match(e.const_literal))return this._previous().toString();const t=this._type_decl();this._consume(e.paren_left,"Expected '('.");let r=[];for(;!this._check(e.paren_right)&&(r.push(this._const_expression()),this._check(e.comma));)this._advance();return this._consume(e.paren_right,"Expected ')'."),new i("create",{type:t,args:r})}_variable_decl(){if(!this._match(r.var))return null;let t=null,s=null;this._match(e.less_than)&&(t=this._consume(e.storage_class,"Expected storage_class.").toString(),this._match(e.comma)&&(s=this._consume(e.access_mode,"Expected access_mode.").toString()),this._consume(e.greater_than,"Expected '>'."));const n=this._consume(e.ident,"Expected variable name");let a=null;if(this._match(e.colon)){const t=this._attribute();a=this._type_decl(),a.attributes=t}return new i("var",{name:n.toString(),type:a,storage:t,access:s})}_enable_directive(){const t=this._consume(e.ident,"identity expected.");return new i("enable",{name:t.toString()})}_type_alias(){const t=this._consume(e.ident,"identity expected.");this._consume(e.equal,"Expected '=' for type alias.");const r=this._type_decl();return new i("alias",{name:t.toString(),alias:r})}_type_decl(){if(this._check([e.ident,...e.texel_format,r.bool,r.float32,r.int32,r.uint32])){const t=this._advance();return new i("type",{name:t.toString()})}if(this._check(e.template_types)){let t=this._advance().toString(),r=null,s=null;return this._match(e.less_than)&&(r=this._type_decl(),s=null,this._match(e.comma)&&(s=this._consume(e.access_mode,"Expected access_mode for pointer").toString()),this._consume(e.greater_than,"Expected '>' for type.")),new i(t,{name:t,format:r,access:s})}if(this._match(r.pointer)){let t=this._previous().toString();this._consume(e.less_than,"Expected '<' for pointer.");const r=this._consume(e.storage_class,"Expected storage_class for pointer");this._consume(e.comma,"Expected ',' for pointer.");const s=this._type_decl();let n=null;return this._match(e.comma)&&(n=this._consume(e.access_mode,"Expected access_mode for pointer").toString()),this._consume(e.greater_than,"Expected '>' for pointer."),new i("pointer",{name:t,storage:r.toString(),decl:s,access:n})}let t=this._texture_sampler_types();if(t)return t;const s=this._attribute();if(this._match(r.array)){const t=this._previous();this._consume(e.less_than,"Expected '<' for array type.");const r=this._type_decl();let n=null;return this._match(e.comma)&&(n=this._consume(e.element_count_expression,"Expected element_count for array.").toString()),this._consume(e.greater_than,"Expected '>' for array."),new i("array",{name:t.toString(),attributes:s,format:r,count:n})}return null}_texture_sampler_types(){if(this._match(e.sampler_type))return new i("sampler",{name:this._previous().toString()});if(this._match(e.depth_texture_type))return new i("sampler",{name:this._previous().toString()});if(this._match(e.sampled_texture_type)||this._match(e.multisampled_texture_type)){const t=this._previous();this._consume(e.less_than,"Expected '<' for sampler type.");const r=this._type_decl();return this._consume(e.greater_than,"Expected '>' for sampler type."),new i("sampler",{name:t.toString(),format:r})}if(this._match(e.storage_texture_type)){const t=this._previous();this._consume(e.less_than,"Expected '<' for sampler type.");const r=this._consume(e.texel_format,"Invalid texel format.").toString();this._consume(e.comma,"Expected ',' after texel format.");const s=this._consume(e.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(e.greater_than,"Expected '>' for sampler type."),new i("sampler",{name:t.toString(),format:r,access:s})}return null}_attribute(){let t=[];for(;this._match(e.attr);){const r=this._consume(e.attribute_name,"Expected attribute name"),s=new i("attribute",{name:r.toString()});if(this._match(e.paren_left)){if(s.value=this._consume(e.literal_or_ident,"Expected attribute value").toString(),this._check(e.comma)){this._advance(),s.value=[s.value];do{const t=this._consume(e.literal_or_ident,"Expected attribute value").toString();s.value.push(t)}while(this._match(e.comma))}this._consume(e.paren_right,"Expected ')'")}t.push(s)}for(;this._match(e.attr_left);){if(!this._check(e.attr_right))do{const r=this._consume(e.attribute_name,"Expected attribute name"),s=new i("attribute",{name:r.toString()});if(this._match(e.paren_left)){if(s.value=this._consume(e.literal_or_ident,"Expected attribute value").toString(),this._check(e.comma)){this._advance(),s.value=[s.value];do{const t=this._consume(e.literal_or_ident,"Expected attribute value").toString();s.value.push(t)}while(this._match(e.comma))}this._consume(e.paren_right,"Expected ')'")}t.push(s)}while(this._match(e.comma));this._consume(e.attr_right,"Expected ']]' after attribute declarations")}return 0==t.length?null:t}}class a{constructor(t){t&&this.initialize(t)}initialize(t){const e=new n;this.ast=e.parse(t),this.structs=[],this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.functions=[],this.aliases=[],this.entry={vertex:[],fragment:[],compute:[]};for(const t of this.ast){if("struct"==t._type&&this.structs.push(t),"alias"==t._type&&this.aliases.push(t),this.isUniformVar(t)){const e=this.getAttribute(t,"group");t.group=e&&e.value?parseInt(e.value):0;const r=this.getAttribute(t,"binding");t.binding=r&&r.value?parseInt(r.value):0,this.uniforms.push(t)}if(this.isStorageVar(t)){const e=this.getAttribute(t,"group");t.group=e&&e.value?parseInt(e.value):0;const r=this.getAttribute(t,"binding");t.binding=r&&r.value?parseInt(r.value):0,this.storage.push(t)}if(this.isTextureVar(t)){const e=this.getAttribute(t,"group");t.group=e&&e.value?parseInt(e.value):0;const r=this.getAttribute(t,"binding");t.binding=r&&r.value?parseInt(r.value):0,this.textures.push(t)}if(this.isSamplerVar(t)){const e=this.getAttribute(t,"group");t.group=e&&e.value?parseInt(e.value):0;const r=this.getAttribute(t,"binding");t.binding=r&&r.value?parseInt(r.value):0,this.samplers.push(t)}if("function"==t._type){this.functions.push(t);const e=this.getAttribute(t,"vertex"),r=this.getAttribute(t,"fragment"),s=this.getAttribute(t,"compute"),i=e||r||s;i&&(t.inputs=this._getInputs(t),this.entry[i.name]?this.entry[i.name].push(t):this.entry[i.name]=[t])}}}isTextureVar(t){return"var"==t._type&&-1!=a.TextureTypes.indexOf(t.type.name)}isSamplerVar(t){return"var"==t._type&&-1!=a.SamplerTypes.indexOf(t.type.name)}isUniformVar(t){return t&&"var"==t._type&&"uniform"==t.storage}isStorageVar(t){return t&&"var"==t._type&&"storage"==t.storage}_getInputs(t,e){"function"==t._type&&(t=t.args),e||(e=[]);for(const r of t){const t=this._getInputInfo(r);t&&e.push(t);const s=this.getStruct(r.type);s&&this._getInputs(s.members,e)}return e}_getInputInfo(t){const e=this.getAttribute(t,"location")||this.getAttribute(t,"builtin");if(e){let r={name:t.name,type:t.type,input:t,locationType:e.name,location:this._parseInt(e.value)};const s=this.getAttribute(t,"interpolation");return s&&(r.interpolation=s.value),r}return null}_parseInt(t){const e=parseInt(t);return isNaN(e)?t:e}getAlias(t){if(!t)return null;if(t.constructor===i){if("type"!=t._type)return null;t=t.name}for(const e of this.aliases)if(e.name==t)return e.alias;return null}getStruct(t){if(!t)return null;if(t.constructor===i){if("struct"==t._type)return t;if("type"!=t._type)return null;t=t.name}for(const e of this.structs)if(e.name==t)return e;return null}getAttribute(t,e){if(!t||!t.attributes)return null;for(let r of t.attributes)if(r.name==e)return r;return null}getBindGroups(){const t=[];function e(e,r){e>=t.length&&(t.length=e+1),void 0===t[e]&&(t[e]=[]),r>=t[e].length&&(t[e].length=r+1)}for(const r of this.uniforms){e(r.group,r.binding);t[r.group][r.binding]={type:"buffer",resource:this.getUniformBufferInfo(r)}}for(const r of this.storage){e(r.group,r.binding);t[r.group][r.binding]={type:"storage",resource:this.getStorageBufferInfo(r)}}for(const r of this.textures){e(r.group,r.binding);t[r.group][r.binding]={type:"texture",resource:r}}for(const r of this.samplers){e(r.group,r.binding);t[r.group][r.binding]={type:"sampler",resource:r}}return t}getStorageBufferInfo(t){if(!this.isStorageVar(t))return null;let e=this.getAttribute(t,"group"),r=this.getAttribute(t,"binding");return e=e&&e.value?parseInt(e.value):0,r=r&&r.value?parseInt(r.value):0,{...this._getUniformInfo(t),group:e,binding:r}}getStructInfo(t){if(!t)return null;const e="struct"===t._type?t:this.getStruct(t.type);if(!e)return null;let r=0,s=0,i=0,n=0,a={name:t.name,type:t.type,align:0,size:0,members:[]};for(let t=0,o=e.members.length;t<o;++t){let o=e.members[t],_=o.name,u=this.getTypeInfo(o);if(!u)continue;let c=o.type,l=u.align,h=u.size;r=this._roundUp(l,r+s),s=h,i=r,n=Math.max(n,l);let m="array"===o.type._type,p=this.getStruct(c)||(m?this.getStruct(o.type.format.name):null),f=!!p,g=f?this.getStructInfo(p):void 0,d=g?.size??m?this.getTypeInfo(o.type.format)?.size:this.getTypeInfo(o.type)?.size,y={name:_,offset:r,size:h,type:c,member:o,isArray:m,arrayCount:parseInt(o.type.count??0),arrayStride:d,isStruct:f,members:f?g?.members:void 0};a.members.push(y)}return a.size=this._roundUp(n,i+s),a.align=n,a.isArray=!1,a.isStruct=!0,a.arrayCount=0,a}_getUniformInfo(t){let e=this.getStructInfo(t);if(e)return e;if(e=this.getTypeInfo(t.type),!e)return e;let r=this.getStruct(t.type.format?.name),s=r?this.getStructInfo(r):void 0;return e.isArray="array"===t.type._type,e.isStruct=!!r,e.members=e.isStruct?s?.members:void 0,e.name=t.name,e.type=t.type,e.arrayStride=s?.size??e.isArray?this.getTypeInfo(t.type.format)?.size:this.getTypeInfo(t.type)?.size,e.arrayCount=parseInt(t.type.count??0),e}getUniformBufferInfo(t){if(!this.isUniformVar(t))return null;let e=this.getAttribute(t,"group"),r=this.getAttribute(t,"binding");return e=e&&e.value?parseInt(e.value):0,r=r&&r.value?parseInt(r.value):0,{...this._getUniformInfo(t),group:e,binding:r}}getTypeInfo(t){if(!t)return;let e=0;const r=this.getAttribute(t,"size");r&&(e=parseInt(r.value));let s=0;const i=this.getAttribute(t,"align");if(i&&(s=parseInt(i.value)),"member"==t._type&&(t=t.type),"type"==t._type){const e=this.getAlias(t.name);if(e)t=e;else{const e=this.getStruct(t.name);e&&(t=e)}}const n=a.TypeInfo[t.name];if(n)return{align:Math.max(s,n.align),size:Math.max(e,n.size)};if("array"==t.name){let r=8,i=8;const n=this.getTypeInfo(t.format);n&&(i=n.size,r=n.align);const a=parseInt(t.count||1),o=this.getAttribute(t,"stride");return i=o?a*parseInt(o.value):a*this._roundUp(r,i),e&&(i=e),{align:Math.max(s,r),size:Math.max(e,i)}}if("struct"==t._type){let r=0,i=0,n=0,a=0,o=0;for(const e of t.members){const t=this.getTypeInfo(e);r=Math.max(t.align,r),n=this._roundUp(t.align,n+a),a=t.size,o=n}return i=this._roundUp(r,o+a),{align:Math.max(s,r),size:Math.max(e,i)}}return null}_roundUp(t,e){return Math.ceil(e/t)*t}}a.TypeInfo={i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},a.TextureTypes=e.any_texture_type.map((t=>t.name)),a.SamplerTypes=e.sampler_type.map((t=>t.name));const o=(t,e)=>((t+e-1)/e|0)*e,_=t=>t&&"number"==typeof t.length&&t.buffer instanceof ArrayBuffer&&"number"==typeof t.byteLength;const u={i32:{numElements:1,align:4,size:4,type:"i32",View:Int32Array},u32:{numElements:1,align:4,size:4,type:"u32",View:Uint32Array},f32:{numElements:1,align:4,size:4,type:"f32",View:Float32Array},f16:{numElements:1,align:2,size:2,type:"u16",View:Uint16Array},"vec2<i32>":{numElements:2,align:8,size:8,type:"i32",View:Int32Array},"vec2<u32>":{numElements:2,align:8,size:8,type:"u32",View:Uint32Array},"vec2<f32>":{numElements:2,align:8,size:8,type:"f32",View:Float32Array},vec2:{numElements:2,align:8,size:8,type:"f32",View:Float32Array},"vec2<f16>":{numElements:2,align:4,size:4,type:"u16",View:Uint16Array},"vec3<i32>":{numElements:3,align:16,size:12,type:"i32",View:Int32Array},"vec3<u32>":{numElements:3,align:16,size:12,type:"u32",View:Uint32Array},"vec3<f32>":{numElements:3,align:16,size:12,type:"f32",View:Float32Array},vec3:{numElements:3,align:16,size:12,type:"f32",View:Float32Array},"vec3<f16>":{numElements:3,align:8,size:6,type:"u16",View:Uint16Array},"vec4<i32>":{numElements:4,align:16,size:16,type:"i32",View:Int32Array},"vec4<u32>":{numElements:4,align:16,size:16,type:"u32",View:Uint32Array},"vec4<f32>":{numElements:4,align:16,size:16,type:"f32",View:Float32Array},vec4:{numElements:4,align:16,size:16,type:"f32",View:Float32Array},"vec4<f16>":{numElements:4,align:8,size:8,type:"u16",View:Uint16Array},"mat2x2<f32>":{numElements:8,align:8,size:16,type:"f32",View:Float32Array},mat2x2:{numElements:8,align:8,size:16,type:"f32",View:Float32Array},"mat2x2<f16>":{numElements:4,align:4,size:8,type:"u16",View:Uint16Array},"mat3x2<f32>":{numElements:8,align:8,size:24,type:"f32",View:Float32Array},mat3x2:{numElements:8,align:8,size:24,type:"f32",View:Float32Array},"mat3x2<f16>":{numElements:8,align:4,size:12,type:"u16",View:Uint16Array},"mat4x2<f32>":{numElements:8,align:8,size:32,type:"f32",View:Float32Array},mat4x2:{numElements:8,align:8,size:32,type:"f32",View:Float32Array},"mat4x2<f16>":{numElements:8,align:4,size:16,type:"u16",View:Uint16Array},"mat2x3<f32>":{numElements:12,align:16,size:32,type:"f32",View:Float32Array},mat2x3:{numElements:12,align:16,size:32,type:"f32",View:Float32Array},"mat2x3<f16>":{numElements:12,align:8,size:16,type:"u16",View:Uint16Array},"mat3x3<f32>":{numElements:12,align:16,size:48,type:"f32",View:Float32Array},mat3x3:{numElements:12,align:16,size:48,type:"f32",View:Float32Array},"mat3x3<f16>":{numElements:12,align:8,size:24,type:"u16",View:Uint16Array},"mat4x3<f32>":{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x3:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},"mat4x3<f16>":{numElements:16,align:8,size:32,type:"u16",View:Uint16Array},"mat2x4<f32>":{numElements:16,align:16,size:32,type:"f32",View:Float32Array},mat2x4:{numElements:16,align:16,size:32,type:"f32",View:Float32Array},"mat2x4<f16>":{numElements:16,align:8,size:16,type:"u16",View:Uint16Array},"mat3x4<f32>":{numElements:16,align:16,size:48,type:"f32",View:Float32Array},mat3x4:{numElements:16,align:16,size:48,type:"f32",View:Float32Array},"mat3x4<f16>":{numElements:16,align:8,size:24,type:"u16",View:Uint16Array},"mat4x4<f32>":{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x4:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},"mat4x4<f16>":{numElements:16,align:8,size:32,type:"u16",View:Uint16Array}};function c(t,e,r){const s=r||0,i=e||new ArrayBuffer(t.size),n=t=>{if(Array.isArray(t))return t.map((t=>n(t)));if("string"==typeof t)throw Error("unreachable");{const e=t.fields;if(e){const t={};for(const[r,s]of Object.entries(e))t[r]=n(s);return t}{const{size:e,offset:r,type:n}=t,{View:a}=u[n],o=e/a.BYTES_PER_ELEMENT;return new a(i,s+r,o)}}};return{views:n(t),arrayBuffer:i}}function l(t,e){if(void 0!==t)if(_(e)){const r=e;1===r.length&&"number"==typeof t?r[0]=t:r.set(t)}else if(Array.isArray(e)){const r=e;t.forEach(((t,e)=>{l(t,r[e])}))}else{const r=e;for(const[e,s]of Object.entries(t)){const t=r[e];t&&l(s,t)}}}function h(t,e,r){return e.isArray?e.isStruct?[e.name,new Array(e.arrayCount).fill(0).map(((s,i)=>m(t,e.members,e.size/e.arrayCount,r+(e.offset||0)+e.size/e.arrayCount*i)))]:[e.name,{offset:r+(e.offset||0),size:e.size,type:e.type.format.name,numElements:e.arrayCount}]:e.isStruct?[e.name,m(t,e.members,e.size,r+(e.offset||0))]:[e.name,{offset:r+(e.offset||0),size:e.size,type:e.type?.name||e.name}]}function m(t,e,r,s=0){return{fields:Object.fromEntries(e.map((e=>h(t,e,s)))),size:r}}const p=new WeakMap;function f(t,e){const r=function(t){let e=p.get(t);return e||(e=new Map,p.set(t,e)),e}(t);let s=r.get(e);return s||(s=new e(t),r.set(e,s)),s}t.TypedArrayViewGenerator=class{arrayBuffer;byteOffset;constructor(t){this.arrayBuffer=new ArrayBuffer(t),this.byteOffset=0}align(t){this.byteOffset=o(this.byteOffset,t)}pad(t){this.byteOffset+=t}getView(t,e){const r=new t(this.arrayBuffer,this.byteOffset,e);return this.byteOffset+=r.byteLength,r}},t.isTypedArray=_,t.makeShaderDataDefinitions=function(t){const e=new a(t),r=Object.fromEntries(e.structs.map((t=>{const r=e.getStructInfo(t);return[t.name,m(e,r.members,r.size)]}))),s=Object.fromEntries(e.uniforms.map((t=>{const r=e.getUniformBufferInfo(t),s=h(e,r,0)[1];return s.binding=r.binding,s.group=r.group,[t.name,s]})));return{structs:r,storages:Object.fromEntries(e.storage.map((t=>{const r=e.getStorageBufferInfo(t),s=h(e,r,0)[1];return s.binding=r.binding,s.group=r.group,[t.name,s]}))),uniforms:s}},t.makeStructuredView=function(t,e,r=0){const s=c(t,e,r);return{...s,set(t){l(t,s.views)}}},t.makeTypedArrayViews=c,t.roundUpToMultipleOf=o,t.setStructuredValues=function t(e,r,s,i=0){const n=e;if(n.type){const t=u[n.type],e=f(s,t.View),a=(i+n.offset)/e.BYTES_PER_ELEMENT;"number"==typeof r?e[a]=r:e.set(r,a)}else if(Array.isArray(e))r.forEach(((r,n)=>{t(e[n],r,s,i)}));else{const n=e;for(const[e,a]of Object.entries(r)){const r=n.fields[e];r&&t(r,a,s,i)}}},t.setStructuredView=l}));
//# sourceMappingURL=webgpu-utils.min.js.map
